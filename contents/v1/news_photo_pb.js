// source: contents/v1/news_photo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var admin_v1_admin_pb = require('../../admin/v1/admin_pb.js');
goog.object.extend(proto, admin_v1_admin_pb);
var contents_v1_tag_pb = require('../../contents/v1/tag_pb.js');
goog.object.extend(proto, contents_v1_tag_pb);
var contents_v1_category_pb = require('../../contents/v1/category_pb.js');
goog.object.extend(proto, contents_v1_category_pb);
var contents_v1_article_pb = require('../../contents/v1/article_pb.js');
goog.object.extend(proto, contents_v1_article_pb);
goog.exportSymbol('proto.contents.v1.ArticlePhoto', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhoto', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoCreateRequest', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoCreateResponse', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoCreateUpdate', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoDeleteRequest', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoDeleteResponse', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetListRequest', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetListRequest.Sort', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetListResponse', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetListStreamResponse', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetOneRequest', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoGetOneResponse', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoUpdateRequest', null, global);
goog.exportSymbol('proto.contents.v1.NewsPhotoUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.ArticlePhoto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.ArticlePhoto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.ArticlePhoto.displayName = 'proto.contents.v1.ArticlePhoto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhoto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contents.v1.NewsPhoto.repeatedFields_, null);
};
goog.inherits(proto.contents.v1.NewsPhoto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhoto.displayName = 'proto.contents.v1.NewsPhoto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoCreateUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contents.v1.NewsPhotoCreateUpdate.repeatedFields_, null);
};
goog.inherits(proto.contents.v1.NewsPhotoCreateUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoCreateUpdate.displayName = 'proto.contents.v1.NewsPhotoCreateUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoGetOneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoGetOneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoGetOneRequest.displayName = 'proto.contents.v1.NewsPhotoGetOneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoGetOneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoGetOneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoGetOneResponse.displayName = 'proto.contents.v1.NewsPhotoGetOneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoGetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contents.v1.NewsPhotoGetListRequest.repeatedFields_, null);
};
goog.inherits(proto.contents.v1.NewsPhotoGetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoGetListRequest.displayName = 'proto.contents.v1.NewsPhotoGetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoGetListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contents.v1.NewsPhotoGetListResponse.repeatedFields_, null);
};
goog.inherits(proto.contents.v1.NewsPhotoGetListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoGetListResponse.displayName = 'proto.contents.v1.NewsPhotoGetListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoGetListStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoGetListStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoGetListStreamResponse.displayName = 'proto.contents.v1.NewsPhotoGetListStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoCreateRequest.displayName = 'proto.contents.v1.NewsPhotoCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoCreateResponse.displayName = 'proto.contents.v1.NewsPhotoCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoUpdateRequest.displayName = 'proto.contents.v1.NewsPhotoUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoUpdateResponse.displayName = 'proto.contents.v1.NewsPhotoUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoDeleteRequest.displayName = 'proto.contents.v1.NewsPhotoDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contents.v1.NewsPhotoDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contents.v1.NewsPhotoDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contents.v1.NewsPhotoDeleteResponse.displayName = 'proto.contents.v1.NewsPhotoDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.ArticlePhoto.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.ArticlePhoto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.ArticlePhoto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.ArticlePhoto.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    imageLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageCaption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageAlt: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.ArticlePhoto}
 */
proto.contents.v1.ArticlePhoto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.ArticlePhoto;
  return proto.contents.v1.ArticlePhoto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.ArticlePhoto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.ArticlePhoto}
 */
proto.contents.v1.ArticlePhoto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageLink(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCaption(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageAlt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.ArticlePhoto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.ArticlePhoto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.ArticlePhoto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.ArticlePhoto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getImageLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageAlt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.contents.v1.ArticlePhoto.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.ArticlePhoto} returns this
 */
proto.contents.v1.ArticlePhoto.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string image_link = 2;
 * @return {string}
 */
proto.contents.v1.ArticlePhoto.prototype.getImageLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.ArticlePhoto} returns this
 */
proto.contents.v1.ArticlePhoto.prototype.setImageLink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image_caption = 3;
 * @return {string}
 */
proto.contents.v1.ArticlePhoto.prototype.getImageCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.ArticlePhoto} returns this
 */
proto.contents.v1.ArticlePhoto.prototype.setImageCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image_alt = 4;
 * @return {string}
 */
proto.contents.v1.ArticlePhoto.prototype.getImageAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.ArticlePhoto} returns this
 */
proto.contents.v1.ArticlePhoto.prototype.setImageAlt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contents.v1.NewsPhoto.repeatedFields_ = [55,51,101];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhoto.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhoto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhoto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhoto.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    categoryId1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryId2: jspb.Message.getFieldWithDefault(msg, 3, 0),
    categoryId3: jspb.Message.getFieldWithDefault(msg, 4, 0),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lead: jspb.Message.getFieldWithDefault(msg, 6, ""),
    content: jspb.Message.getFieldWithDefault(msg, 7, ""),
    imageCoverUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    imageCoverUrlOriginal: jspb.Message.getFieldWithDefault(msg, 19, ""),
    imageCoverCaption: jspb.Message.getFieldWithDefault(msg, 9, ""),
    imageCoverAlt: jspb.Message.getFieldWithDefault(msg, 18, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 14, ""),
    energy: jspb.Message.getFieldWithDefault(msg, 16, 0),
    type: jspb.Message.getFieldWithDefault(msg, 17, 0),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sectionHomepage: jspb.Message.getFieldWithDefault(msg, 13, 0),
    special: jspb.Message.getFieldWithDefault(msg, 20, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    photosList: jspb.Message.toObjectList(msg.getPhotosList(),
    proto.contents.v1.ArticlePhoto.toObject, includeInstance),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    contents_v1_tag_pb.Tag.toObject, includeInstance),
    category1: (f = msg.getCategory1()) && contents_v1_category_pb.Category1.toObject(includeInstance, f),
    category2: (f = msg.getCategory2()) && contents_v1_category_pb.Category2.toObject(includeInstance, f),
    category3: (f = msg.getCategory3()) && contents_v1_category_pb.Category3.toObject(includeInstance, f),
    seo: (f = msg.getSeo()) && contents_v1_article_pb.ArticleSEO.toObject(includeInstance, f),
    adminCreated: (f = msg.getAdminCreated()) && admin_v1_admin_pb.Admin.toObject(includeInstance, f),
    creditsList: jspb.Message.toObjectList(msg.getCreditsList(),
    contents_v1_article_pb.ArticleCredit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhoto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhoto;
  return proto.contents.v1.NewsPhoto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhoto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhoto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId2(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId3(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLead(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverUrl(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverUrlOriginal(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverCaption(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverAlt(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnergy(value);
      break;
    case 17:
      var value = /** @type {!proto.contents.v1.ArticleType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {!proto.contents.v1.ArticleStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 13:
      var value = /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (reader.readEnum());
      msg.setSectionHomepage(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpecial(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    case 55:
      var value = new proto.contents.v1.ArticlePhoto;
      reader.readMessage(value,proto.contents.v1.ArticlePhoto.deserializeBinaryFromReader);
      msg.addPhotos(value);
      break;
    case 51:
      var value = new contents_v1_tag_pb.Tag;
      reader.readMessage(value,contents_v1_tag_pb.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 52:
      var value = new contents_v1_category_pb.Category1;
      reader.readMessage(value,contents_v1_category_pb.Category1.deserializeBinaryFromReader);
      msg.setCategory1(value);
      break;
    case 53:
      var value = new contents_v1_category_pb.Category2;
      reader.readMessage(value,contents_v1_category_pb.Category2.deserializeBinaryFromReader);
      msg.setCategory2(value);
      break;
    case 54:
      var value = new contents_v1_category_pb.Category3;
      reader.readMessage(value,contents_v1_category_pb.Category3.deserializeBinaryFromReader);
      msg.setCategory3(value);
      break;
    case 56:
      var value = new contents_v1_article_pb.ArticleSEO;
      reader.readMessage(value,contents_v1_article_pb.ArticleSEO.deserializeBinaryFromReader);
      msg.setSeo(value);
      break;
    case 57:
      var value = new admin_v1_admin_pb.Admin;
      reader.readMessage(value,admin_v1_admin_pb.Admin.deserializeBinaryFromReader);
      msg.setAdminCreated(value);
      break;
    case 101:
      var value = new contents_v1_article_pb.ArticleCredit;
      reader.readMessage(value,contents_v1_article_pb.ArticleCredit.deserializeBinaryFromReader);
      msg.addCredits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhoto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhoto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhoto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhoto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCategoryId1();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCategoryId2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCategoryId3();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLead();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getImageCoverUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getImageCoverUrlOriginal();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getImageCoverCaption();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getImageCoverAlt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEnergy();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getSectionHomepage();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getSpecial();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      55,
      f,
      proto.contents.v1.ArticlePhoto.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      51,
      f,
      contents_v1_tag_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getCategory1();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      contents_v1_category_pb.Category1.serializeBinaryToWriter
    );
  }
  f = message.getCategory2();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      contents_v1_category_pb.Category2.serializeBinaryToWriter
    );
  }
  f = message.getCategory3();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      contents_v1_category_pb.Category3.serializeBinaryToWriter
    );
  }
  f = message.getSeo();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      contents_v1_article_pb.ArticleSEO.serializeBinaryToWriter
    );
  }
  f = message.getAdminCreated();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      admin_v1_admin_pb.Admin.serializeBinaryToWriter
    );
  }
  f = message.getCreditsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      101,
      f,
      contents_v1_article_pb.ArticleCredit.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 category_id_1 = 2;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getCategoryId1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setCategoryId1 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 category_id_2 = 3;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getCategoryId2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setCategoryId2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 category_id_3 = 4;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getCategoryId3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setCategoryId3 = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lead = 6;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getLead = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setLead = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string content = 7;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string image_cover_url = 8;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getImageCoverUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setImageCoverUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string image_cover_url_original = 19;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getImageCoverUrlOriginal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setImageCoverUrlOriginal = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string image_cover_caption = 9;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getImageCoverCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setImageCoverCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string image_cover_alt = 18;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getImageCoverAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setImageCoverAlt = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string slug = 14;
 * @return {string}
 */
proto.contents.v1.NewsPhoto.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 energy = 16;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setEnergy = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional ArticleType type = 17;
 * @return {!proto.contents.v1.ArticleType}
 */
proto.contents.v1.NewsPhoto.prototype.getType = function() {
  return /** @type {!proto.contents.v1.ArticleType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.contents.v1.ArticleType} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional ArticleStatus status = 10;
 * @return {!proto.contents.v1.ArticleStatus}
 */
proto.contents.v1.NewsPhoto.prototype.getStatus = function() {
  return /** @type {!proto.contents.v1.ArticleStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.contents.v1.ArticleStatus} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional ArticleSectionHomepage section_homepage = 13;
 * @return {!proto.contents.v1.ArticleSectionHomepage}
 */
proto.contents.v1.NewsPhoto.prototype.getSectionHomepage = function() {
  return /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.contents.v1.ArticleSectionHomepage} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setSectionHomepage = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional int32 special = 20;
 * @return {number}
 */
proto.contents.v1.NewsPhoto.prototype.getSpecial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.setSpecial = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.contents.v1.NewsPhoto.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.contents.v1.NewsPhoto.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.contents.v1.NewsPhoto.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ArticlePhoto photos = 55;
 * @return {!Array<!proto.contents.v1.ArticlePhoto>}
 */
proto.contents.v1.NewsPhoto.prototype.getPhotosList = function() {
  return /** @type{!Array<!proto.contents.v1.ArticlePhoto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contents.v1.ArticlePhoto, 55));
};


/**
 * @param {!Array<!proto.contents.v1.ArticlePhoto>} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setPhotosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 55, value);
};


/**
 * @param {!proto.contents.v1.ArticlePhoto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.ArticlePhoto}
 */
proto.contents.v1.NewsPhoto.prototype.addPhotos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 55, opt_value, proto.contents.v1.ArticlePhoto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * repeated Tag tags = 51;
 * @return {!Array<!proto.contents.v1.Tag>}
 */
proto.contents.v1.NewsPhoto.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.contents.v1.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, contents_v1_tag_pb.Tag, 51));
};


/**
 * @param {!Array<!proto.contents.v1.Tag>} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 51, value);
};


/**
 * @param {!proto.contents.v1.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.Tag}
 */
proto.contents.v1.NewsPhoto.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 51, opt_value, proto.contents.v1.Tag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional Category1 category1 = 52;
 * @return {?proto.contents.v1.Category1}
 */
proto.contents.v1.NewsPhoto.prototype.getCategory1 = function() {
  return /** @type{?proto.contents.v1.Category1} */ (
    jspb.Message.getWrapperField(this, contents_v1_category_pb.Category1, 52));
};


/**
 * @param {?proto.contents.v1.Category1|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setCategory1 = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearCategory1 = function() {
  return this.setCategory1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasCategory1 = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional Category2 category2 = 53;
 * @return {?proto.contents.v1.Category2}
 */
proto.contents.v1.NewsPhoto.prototype.getCategory2 = function() {
  return /** @type{?proto.contents.v1.Category2} */ (
    jspb.Message.getWrapperField(this, contents_v1_category_pb.Category2, 53));
};


/**
 * @param {?proto.contents.v1.Category2|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setCategory2 = function(value) {
  return jspb.Message.setWrapperField(this, 53, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearCategory2 = function() {
  return this.setCategory2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasCategory2 = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional Category3 category3 = 54;
 * @return {?proto.contents.v1.Category3}
 */
proto.contents.v1.NewsPhoto.prototype.getCategory3 = function() {
  return /** @type{?proto.contents.v1.Category3} */ (
    jspb.Message.getWrapperField(this, contents_v1_category_pb.Category3, 54));
};


/**
 * @param {?proto.contents.v1.Category3|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setCategory3 = function(value) {
  return jspb.Message.setWrapperField(this, 54, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearCategory3 = function() {
  return this.setCategory3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasCategory3 = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional ArticleSEO seo = 56;
 * @return {?proto.contents.v1.ArticleSEO}
 */
proto.contents.v1.NewsPhoto.prototype.getSeo = function() {
  return /** @type{?proto.contents.v1.ArticleSEO} */ (
    jspb.Message.getWrapperField(this, contents_v1_article_pb.ArticleSEO, 56));
};


/**
 * @param {?proto.contents.v1.ArticleSEO|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setSeo = function(value) {
  return jspb.Message.setWrapperField(this, 56, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearSeo = function() {
  return this.setSeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasSeo = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional admin.v1.Admin admin_created = 57;
 * @return {?proto.admin.v1.Admin}
 */
proto.contents.v1.NewsPhoto.prototype.getAdminCreated = function() {
  return /** @type{?proto.admin.v1.Admin} */ (
    jspb.Message.getWrapperField(this, admin_v1_admin_pb.Admin, 57));
};


/**
 * @param {?proto.admin.v1.Admin|undefined} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setAdminCreated = function(value) {
  return jspb.Message.setWrapperField(this, 57, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearAdminCreated = function() {
  return this.setAdminCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhoto.prototype.hasAdminCreated = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * repeated ArticleCredit credits = 101;
 * @return {!Array<!proto.contents.v1.ArticleCredit>}
 */
proto.contents.v1.NewsPhoto.prototype.getCreditsList = function() {
  return /** @type{!Array<!proto.contents.v1.ArticleCredit>} */ (
    jspb.Message.getRepeatedWrapperField(this, contents_v1_article_pb.ArticleCredit, 101));
};


/**
 * @param {!Array<!proto.contents.v1.ArticleCredit>} value
 * @return {!proto.contents.v1.NewsPhoto} returns this
*/
proto.contents.v1.NewsPhoto.prototype.setCreditsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 101, value);
};


/**
 * @param {!proto.contents.v1.ArticleCredit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.ArticleCredit}
 */
proto.contents.v1.NewsPhoto.prototype.addCredits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 101, opt_value, proto.contents.v1.ArticleCredit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhoto} returns this
 */
proto.contents.v1.NewsPhoto.prototype.clearCreditsList = function() {
  return this.setCreditsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contents.v1.NewsPhotoCreateUpdate.repeatedFields_ = [53,51,52];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoCreateUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoCreateUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryId1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryId2: jspb.Message.getFieldWithDefault(msg, 3, 0),
    categoryId3: jspb.Message.getFieldWithDefault(msg, 4, 0),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lead: jspb.Message.getFieldWithDefault(msg, 6, ""),
    content: jspb.Message.getFieldWithDefault(msg, 7, ""),
    imageCoverUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    imageCoverUrlOriginal: jspb.Message.getFieldWithDefault(msg, 19, ""),
    imageCoverCaption: jspb.Message.getFieldWithDefault(msg, 9, ""),
    imageCoverAlt: jspb.Message.getFieldWithDefault(msg, 18, ""),
    energy: jspb.Message.getFieldWithDefault(msg, 11, 0),
    type: jspb.Message.getFieldWithDefault(msg, 12, 0),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sectionHomepage: jspb.Message.getFieldWithDefault(msg, 13, 0),
    special: jspb.Message.getFieldWithDefault(msg, 20, 0),
    isCustomPublishedAt: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    photosList: jspb.Message.toObjectList(msg.getPhotosList(),
    proto.contents.v1.ArticlePhoto.toObject, includeInstance),
    seo: (f = msg.getSeo()) && contents_v1_article_pb.ArticleSEO.toObject(includeInstance, f),
    tagIdsList: (f = jspb.Message.getRepeatedField(msg, 51)) == null ? undefined : f,
    creditsList: jspb.Message.toObjectList(msg.getCreditsList(),
    contents_v1_article_pb.ArticleCreditCreateUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate}
 */
proto.contents.v1.NewsPhotoCreateUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoCreateUpdate;
  return proto.contents.v1.NewsPhotoCreateUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoCreateUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate}
 */
proto.contents.v1.NewsPhotoCreateUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId2(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId3(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLead(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverUrl(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverUrlOriginal(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverCaption(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageCoverAlt(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnergy(value);
      break;
    case 12:
      var value = /** @type {!proto.contents.v1.ArticleType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {!proto.contents.v1.ArticleStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 13:
      var value = /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (reader.readEnum());
      msg.setSectionHomepage(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpecial(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCustomPublishedAt(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    case 53:
      var value = new proto.contents.v1.ArticlePhoto;
      reader.readMessage(value,proto.contents.v1.ArticlePhoto.deserializeBinaryFromReader);
      msg.addPhotos(value);
      break;
    case 56:
      var value = new contents_v1_article_pb.ArticleSEO;
      reader.readMessage(value,contents_v1_article_pb.ArticleSEO.deserializeBinaryFromReader);
      msg.setSeo(value);
      break;
    case 51:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTagIds(values[i]);
      }
      break;
    case 52:
      var value = new contents_v1_article_pb.ArticleCreditCreateUpdate;
      reader.readMessage(value,contents_v1_article_pb.ArticleCreditCreateUpdate.deserializeBinaryFromReader);
      msg.addCredits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoCreateUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoCreateUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryId1();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCategoryId2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCategoryId3();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLead();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getImageCoverUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getImageCoverUrlOriginal();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getImageCoverCaption();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getImageCoverAlt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getEnergy();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getSectionHomepage();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getSpecial();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getIsCustomPublishedAt();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      53,
      f,
      proto.contents.v1.ArticlePhoto.serializeBinaryToWriter
    );
  }
  f = message.getSeo();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      contents_v1_article_pb.ArticleSEO.serializeBinaryToWriter
    );
  }
  f = message.getTagIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      51,
      f
    );
  }
  f = message.getCreditsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      52,
      f,
      contents_v1_article_pb.ArticleCreditCreateUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 category_id_1 = 2;
 * @return {number}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getCategoryId1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setCategoryId1 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 category_id_2 = 3;
 * @return {number}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getCategoryId2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setCategoryId2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 category_id_3 = 4;
 * @return {number}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getCategoryId3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setCategoryId3 = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lead = 6;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getLead = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setLead = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string content = 7;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string image_cover_url = 8;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getImageCoverUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setImageCoverUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string image_cover_url_original = 19;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getImageCoverUrlOriginal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setImageCoverUrlOriginal = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string image_cover_caption = 9;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getImageCoverCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setImageCoverCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string image_cover_alt = 18;
 * @return {string}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getImageCoverAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setImageCoverAlt = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 energy = 11;
 * @return {number}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setEnergy = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional ArticleType type = 12;
 * @return {!proto.contents.v1.ArticleType}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getType = function() {
  return /** @type {!proto.contents.v1.ArticleType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.contents.v1.ArticleType} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional ArticleStatus status = 10;
 * @return {!proto.contents.v1.ArticleStatus}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getStatus = function() {
  return /** @type {!proto.contents.v1.ArticleStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.contents.v1.ArticleStatus} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional ArticleSectionHomepage section_homepage = 13;
 * @return {!proto.contents.v1.ArticleSectionHomepage}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getSectionHomepage = function() {
  return /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.contents.v1.ArticleSectionHomepage} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setSectionHomepage = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional int32 special = 20;
 * @return {number}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getSpecial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setSpecial = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional bool is_custom_published_at = 14;
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getIsCustomPublishedAt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setIsCustomPublishedAt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp published_at = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
*/
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ArticlePhoto photos = 53;
 * @return {!Array<!proto.contents.v1.ArticlePhoto>}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getPhotosList = function() {
  return /** @type{!Array<!proto.contents.v1.ArticlePhoto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contents.v1.ArticlePhoto, 53));
};


/**
 * @param {!Array<!proto.contents.v1.ArticlePhoto>} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
*/
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setPhotosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 53, value);
};


/**
 * @param {!proto.contents.v1.ArticlePhoto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.ArticlePhoto}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.addPhotos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 53, opt_value, proto.contents.v1.ArticlePhoto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional ArticleSEO seo = 56;
 * @return {?proto.contents.v1.ArticleSEO}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getSeo = function() {
  return /** @type{?proto.contents.v1.ArticleSEO} */ (
    jspb.Message.getWrapperField(this, contents_v1_article_pb.ArticleSEO, 56));
};


/**
 * @param {?proto.contents.v1.ArticleSEO|undefined} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
*/
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setSeo = function(value) {
  return jspb.Message.setWrapperField(this, 56, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.clearSeo = function() {
  return this.setSeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.hasSeo = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * repeated int32 tag_ids = 51;
 * @return {!Array<number>}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getTagIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 51));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setTagIdsList = function(value) {
  return jspb.Message.setField(this, 51, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.addTagIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 51, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.clearTagIdsList = function() {
  return this.setTagIdsList([]);
};


/**
 * repeated ArticleCreditCreateUpdate credits = 52;
 * @return {!Array<!proto.contents.v1.ArticleCreditCreateUpdate>}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.getCreditsList = function() {
  return /** @type{!Array<!proto.contents.v1.ArticleCreditCreateUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, contents_v1_article_pb.ArticleCreditCreateUpdate, 52));
};


/**
 * @param {!Array<!proto.contents.v1.ArticleCreditCreateUpdate>} value
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
*/
proto.contents.v1.NewsPhotoCreateUpdate.prototype.setCreditsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 52, value);
};


/**
 * @param {!proto.contents.v1.ArticleCreditCreateUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.ArticleCreditCreateUpdate}
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.addCredits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 52, opt_value, proto.contents.v1.ArticleCreditCreateUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoCreateUpdate} returns this
 */
proto.contents.v1.NewsPhotoCreateUpdate.prototype.clearCreditsList = function() {
  return this.setCreditsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoGetOneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoGetOneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetOneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    searchBySlug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    withAdminCreated: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoGetOneRequest}
 */
proto.contents.v1.NewsPhotoGetOneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoGetOneRequest;
  return proto.contents.v1.NewsPhotoGetOneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoGetOneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoGetOneRequest}
 */
proto.contents.v1.NewsPhotoGetOneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchBySlug(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithAdminCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoGetOneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoGetOneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetOneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSearchBySlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWithAdminCreated();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetOneRequest} returns this
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string search_by_slug = 2;
 * @return {string}
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.getSearchBySlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoGetOneRequest} returns this
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.setSearchBySlug = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool with_admin_created = 3;
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.getWithAdminCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contents.v1.NewsPhotoGetOneRequest} returns this
 */
proto.contents.v1.NewsPhotoGetOneRequest.prototype.setWithAdminCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoGetOneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoGetOneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoGetOneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetOneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhoto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoGetOneResponse}
 */
proto.contents.v1.NewsPhotoGetOneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoGetOneResponse;
  return proto.contents.v1.NewsPhotoGetOneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoGetOneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoGetOneResponse}
 */
proto.contents.v1.NewsPhotoGetOneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoGetOneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoGetOneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoGetOneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetOneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewsPhoto data = 1;
 * @return {?proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoGetOneResponse.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhoto} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhoto|undefined} value
 * @return {!proto.contents.v1.NewsPhotoGetOneResponse} returns this
*/
proto.contents.v1.NewsPhotoGetOneResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoGetOneResponse} returns this
 */
proto.contents.v1.NewsPhotoGetOneResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoGetOneResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contents.v1.NewsPhotoGetListRequest.repeatedFields_ = [9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoGetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoGetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statusMultipleList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    type: jspb.Message.getFieldWithDefault(msg, 12, 0),
    typesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    sectionHomepage: jspb.Message.getFieldWithDefault(msg, 10, 0),
    categoryId1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryId2: jspb.Message.getFieldWithDefault(msg, 3, 0),
    categoryId3: jspb.Message.getFieldWithDefault(msg, 4, 0),
    search: jspb.Message.getFieldWithDefault(msg, 6, ""),
    adminId: jspb.Message.getFieldWithDefault(msg, 14, 0),
    adminCreatedId: jspb.Message.getFieldWithDefault(msg, 15, 0),
    page: jspb.Message.getFieldWithDefault(msg, 7, 0),
    contentPerPage: jspb.Message.getFieldWithDefault(msg, 8, 0),
    withAdminCreated: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    sortBy: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoGetListRequest}
 */
proto.contents.v1.NewsPhotoGetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoGetListRequest;
  return proto.contents.v1.NewsPhotoGetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoGetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoGetListRequest}
 */
proto.contents.v1.NewsPhotoGetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.contents.v1.ArticleStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var values = /** @type {!Array<!proto.contents.v1.ArticleStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatusMultiple(values[i]);
      }
      break;
    case 12:
      var value = /** @type {!proto.contents.v1.ArticleType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 11:
      var values = /** @type {!Array<!proto.contents.v1.ArticleType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTypes(values[i]);
      }
      break;
    case 10:
      var value = /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (reader.readEnum());
      msg.setSectionHomepage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId2(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId3(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdminId(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdminCreatedId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContentPerPage(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithAdminCreated(value);
      break;
    case 5:
      var value = /** @type {!proto.contents.v1.NewsPhotoGetListRequest.Sort} */ (reader.readEnum());
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoGetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoGetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStatusMultipleList();
  if (f.length > 0) {
    writer.writePackedEnum(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
  f = message.getSectionHomepage();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getCategoryId1();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCategoryId2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCategoryId3();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdminId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getAdminCreatedId();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getContentPerPage();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getWithAdminCreated();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getSortBy();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.Sort = {
  TITLE_ASCENDING_UNSPECIFIED: 0,
  TITLE_DESCENDING: 1,
  OLDEST: 2,
  NEWEST: 3,
  ENERGY_HIGHEST: 4,
  ENERGY_LOWEST: 5,
  CREATED_AT_ASCENDING: 6,
  CREATED_AT_DESCENDING: 7,
  PUBLISHED_AT_ASCENDING: 8,
  PUBLISHED_AT_DESCENDING: 9
};

/**
 * optional ArticleStatus status = 1;
 * @return {!proto.contents.v1.ArticleStatus}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getStatus = function() {
  return /** @type {!proto.contents.v1.ArticleStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.contents.v1.ArticleStatus} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated ArticleStatus status_multiple = 9;
 * @return {!Array<!proto.contents.v1.ArticleStatus>}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getStatusMultipleList = function() {
  return /** @type {!Array<!proto.contents.v1.ArticleStatus>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<!proto.contents.v1.ArticleStatus>} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setStatusMultipleList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!proto.contents.v1.ArticleStatus} value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.addStatusMultiple = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.clearStatusMultipleList = function() {
  return this.setStatusMultipleList([]);
};


/**
 * optional ArticleType type = 12;
 * @return {!proto.contents.v1.ArticleType}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getType = function() {
  return /** @type {!proto.contents.v1.ArticleType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.contents.v1.ArticleType} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * repeated ArticleType types = 11;
 * @return {!Array<!proto.contents.v1.ArticleType>}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getTypesList = function() {
  return /** @type {!Array<!proto.contents.v1.ArticleType>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<!proto.contents.v1.ArticleType>} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.contents.v1.ArticleType} value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * optional ArticleSectionHomepage section_homepage = 10;
 * @return {!proto.contents.v1.ArticleSectionHomepage}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getSectionHomepage = function() {
  return /** @type {!proto.contents.v1.ArticleSectionHomepage} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.contents.v1.ArticleSectionHomepage} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setSectionHomepage = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional int32 category_id_1 = 2;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getCategoryId1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setCategoryId1 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 category_id_2 = 3;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getCategoryId2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setCategoryId2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 category_id_3 = 4;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getCategoryId3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setCategoryId3 = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string search = 6;
 * @return {string}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 admin_id = 14;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getAdminId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setAdminId = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 admin_created_id = 15;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getAdminCreatedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setAdminCreatedId = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 page = 7;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 content_per_page = 8;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getContentPerPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setContentPerPage = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool with_admin_created = 13;
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getWithAdminCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setWithAdminCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {!proto.contents.v1.NewsPhotoGetListRequest.Sort}
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.getSortBy = function() {
  return /** @type {!proto.contents.v1.NewsPhotoGetListRequest.Sort} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.contents.v1.NewsPhotoGetListRequest.Sort} value
 * @return {!proto.contents.v1.NewsPhotoGetListRequest} returns this
 */
proto.contents.v1.NewsPhotoGetListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contents.v1.NewsPhotoGetListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoGetListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoGetListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contents.v1.NewsPhoto.toObject, includeInstance),
    maxPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoGetListResponse}
 */
proto.contents.v1.NewsPhotoGetListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoGetListResponse;
  return proto.contents.v1.NewsPhotoGetListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoGetListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoGetListResponse}
 */
proto.contents.v1.NewsPhotoGetListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoGetListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoGetListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
  f = message.getMaxPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated NewsPhoto data = 1;
 * @return {!Array<!proto.contents.v1.NewsPhoto>}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contents.v1.NewsPhoto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {!Array<!proto.contents.v1.NewsPhoto>} value
 * @return {!proto.contents.v1.NewsPhotoGetListResponse} returns this
*/
proto.contents.v1.NewsPhotoGetListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.contents.v1.NewsPhoto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.contents.v1.NewsPhoto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contents.v1.NewsPhotoGetListResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional int32 max_page = 2;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.getMaxPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.setMaxPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoGetListStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoGetListStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhoto.toObject(includeInstance, f),
    maxPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoGetListStreamResponse;
  return proto.contents.v1.NewsPhotoGetListStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoGetListStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoGetListStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoGetListStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
  f = message.getMaxPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional NewsPhoto data = 1;
 * @return {?proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhoto} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhoto|undefined} value
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse} returns this
*/
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 max_page = 2;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.getMaxPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.setMaxPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoGetListStreamResponse} returns this
 */
proto.contents.v1.NewsPhotoGetListStreamResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhotoCreateUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoCreateRequest}
 */
proto.contents.v1.NewsPhotoCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoCreateRequest;
  return proto.contents.v1.NewsPhotoCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoCreateRequest}
 */
proto.contents.v1.NewsPhotoCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhotoCreateUpdate;
      reader.readMessage(value,proto.contents.v1.NewsPhotoCreateUpdate.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhotoCreateUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewsPhotoCreateUpdate data = 1;
 * @return {?proto.contents.v1.NewsPhotoCreateUpdate}
 */
proto.contents.v1.NewsPhotoCreateRequest.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhotoCreateUpdate} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhotoCreateUpdate, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhotoCreateUpdate|undefined} value
 * @return {!proto.contents.v1.NewsPhotoCreateRequest} returns this
*/
proto.contents.v1.NewsPhotoCreateRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoCreateRequest} returns this
 */
proto.contents.v1.NewsPhotoCreateRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoCreateRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhoto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoCreateResponse}
 */
proto.contents.v1.NewsPhotoCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoCreateResponse;
  return proto.contents.v1.NewsPhotoCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoCreateResponse}
 */
proto.contents.v1.NewsPhotoCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewsPhoto data = 1;
 * @return {?proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoCreateResponse.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhoto} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhoto|undefined} value
 * @return {!proto.contents.v1.NewsPhotoCreateResponse} returns this
*/
proto.contents.v1.NewsPhotoCreateResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoCreateResponse} returns this
 */
proto.contents.v1.NewsPhotoCreateResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoCreateResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: (f = msg.getData()) && proto.contents.v1.NewsPhotoCreateUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoUpdateRequest}
 */
proto.contents.v1.NewsPhotoUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoUpdateRequest;
  return proto.contents.v1.NewsPhotoUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoUpdateRequest}
 */
proto.contents.v1.NewsPhotoUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.contents.v1.NewsPhotoCreateUpdate;
      reader.readMessage(value,proto.contents.v1.NewsPhotoCreateUpdate.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.contents.v1.NewsPhotoCreateUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoUpdateRequest} returns this
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional NewsPhotoCreateUpdate data = 2;
 * @return {?proto.contents.v1.NewsPhotoCreateUpdate}
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhotoCreateUpdate} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhotoCreateUpdate, 2));
};


/**
 * @param {?proto.contents.v1.NewsPhotoCreateUpdate|undefined} value
 * @return {!proto.contents.v1.NewsPhotoUpdateRequest} returns this
*/
proto.contents.v1.NewsPhotoUpdateRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoUpdateRequest} returns this
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoUpdateRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhoto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoUpdateResponse}
 */
proto.contents.v1.NewsPhotoUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoUpdateResponse;
  return proto.contents.v1.NewsPhotoUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoUpdateResponse}
 */
proto.contents.v1.NewsPhotoUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewsPhoto data = 1;
 * @return {?proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoUpdateResponse.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhoto} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhoto|undefined} value
 * @return {!proto.contents.v1.NewsPhotoUpdateResponse} returns this
*/
proto.contents.v1.NewsPhotoUpdateResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoUpdateResponse} returns this
 */
proto.contents.v1.NewsPhotoUpdateResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoUpdateResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    softDelete: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoDeleteRequest}
 */
proto.contents.v1.NewsPhotoDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoDeleteRequest;
  return proto.contents.v1.NewsPhotoDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoDeleteRequest}
 */
proto.contents.v1.NewsPhotoDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSoftDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSoftDelete();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contents.v1.NewsPhotoDeleteRequest} returns this
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool soft_delete = 2;
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.getSoftDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contents.v1.NewsPhotoDeleteRequest} returns this
 */
proto.contents.v1.NewsPhotoDeleteRequest.prototype.setSoftDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contents.v1.NewsPhotoDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contents.v1.NewsPhotoDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contents.v1.NewsPhotoDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.contents.v1.NewsPhoto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contents.v1.NewsPhotoDeleteResponse}
 */
proto.contents.v1.NewsPhotoDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contents.v1.NewsPhotoDeleteResponse;
  return proto.contents.v1.NewsPhotoDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contents.v1.NewsPhotoDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contents.v1.NewsPhotoDeleteResponse}
 */
proto.contents.v1.NewsPhotoDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contents.v1.NewsPhoto;
      reader.readMessage(value,proto.contents.v1.NewsPhoto.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contents.v1.NewsPhotoDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contents.v1.NewsPhotoDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contents.v1.NewsPhotoDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contents.v1.NewsPhotoDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contents.v1.NewsPhoto.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewsPhoto data = 1;
 * @return {?proto.contents.v1.NewsPhoto}
 */
proto.contents.v1.NewsPhotoDeleteResponse.prototype.getData = function() {
  return /** @type{?proto.contents.v1.NewsPhoto} */ (
    jspb.Message.getWrapperField(this, proto.contents.v1.NewsPhoto, 1));
};


/**
 * @param {?proto.contents.v1.NewsPhoto|undefined} value
 * @return {!proto.contents.v1.NewsPhotoDeleteResponse} returns this
*/
proto.contents.v1.NewsPhotoDeleteResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contents.v1.NewsPhotoDeleteResponse} returns this
 */
proto.contents.v1.NewsPhotoDeleteResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contents.v1.NewsPhotoDeleteResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.contents.v1);
